# Основний інструмент у pathlib — Path, об'єкт, який є шляхом 
# (адреса у файловій системі). В основному робота з файловою 
# системою ведеться через Path. Path варто сприймати як вказівку 
# на файл або папку. Щоб створити такий Path, достатньо 
# викликати Path як функцію та передати у якості аргументу 
# рядок-адресу у файловій системі:

from pathlib import Path

p = Path('/home/user/Downloads') # Вказує на папку

# Можна викликати Path без аргументів, тоді ви отримаєте 
# вказівник на папку, в якій ви зараз знаходитеся.

p = Path()

#                                           parent
# Вказує на батьківську папку

#                                           name
# Повертає лише ім'я (рядок) папки фбо файлу

#                                           suffix
# Повертає рядком розширення файлу на яку вказує

p = Path('setup.py')

p_suffix = p.suffix

print(p_suffix) # .py

#                                           exists()
# Повертає True або False, залежно від 
# чи існує такий файл

#                                           is_dir()
# Повертає True якщо вказує на папку
# Повертає False якщо на файл або шляху не сінує 

#                                           is_file()
# Повертає True якщо вказує на файл
# Повертає False якщо на папку або шляху не сінує 

#                                           iterdir()
# Повертає ітератор за всіма файлами та 
# папками в середині папки р
 
p = Path('/home/user/Downloads')

for i in p.iterdir():
    print(i.name) # виведе у циклі імена всіх папок та файлів

#                                           absolute()

#                                           glob()

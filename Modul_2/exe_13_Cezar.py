# Досить часто програмісти стикаються із завданнями кодування інформації. 
# Закодувати повідомлення в чаті між двома користувачами. Зашифрувати 
# пароль та ім'я користувача при автентифікації користувача через мережу 
# і т.і.
# 
# Напишіть програму, що реалізує код Цезаря. Він названий на честь 
# великого римського імператора Юлія Цезаря.
# 
# Ідея шифрування полягає у циклічному зміщенні букв на задану кількість. 
# Наприклад, якщо зміщення на три позиції, то літера A стає літерою D, 
# B – E тощо. Останні три літери алфавіту зациклюються та переносяться 
# на початок. Літера X стає A, Y – B, а Z – C. Цифри, пробіли та інші 
# символи не шифруються.
# 
# У програмі користувач вводить фразу та число для зсуву, після чого 
# треба вирахувати нове закодоване повідомлення.
# 
# Програма шифруватиме як малі (a-z), так і великі літери (A-Z).
# 
# Для розв'язку цього завдання знадобиться знання двох нових функцій. 
# Перша функція ord. Вона перетворює символ на число, яке є позицією в 
# таблиці ASCII.
# 
# ord("a")  # 97
# 
# Можна вважати, що отриманий результат '97' — це числове представлення 
# символу a для комп'ютера.

# ----------------------------------------------------------------
# message = input("Enter a message: ")
# offset = int(input("Enter the offset: "))
# encoded_message = ""
# for ch in message:
# ----------------------------------------------------------------

#    num: 01 02 03 04 05 06 07 08 09 10 11 12 13
# letter:  A  B  C  D  E  F  G  H  I  J  K  L  M
#  ASCII: 

#    num: 14 15 16 17 18 19 20 21 22 23 24 25 26
# letter:  N  O  P  Q  R  S  T  U  V  W  X  Y  Z
#  ASCII: 


message = input("Enter a message: ")
offset = int(input("Enter the offset: "))
encoded_message = ""
for ch in message:
    if ord('A') <= ord(ch) <= ord('Z'):
        pos = ord(ch) - ord('A')
        pos = (pos + offset) % 26
        new_char = chr(pos + ord('A'))
    elif ord('a') <= ord(ch) <= ord('z'):
        pos = ord(ch) - ord('a')
        pos = (pos + offset) % 26
        new_char = chr(pos + ord('a'))
    else:
        new_char = ch
    encoded_message = encoded_message + new_char

print(encoded_message)